{"version":3,"file":"static/js/186.85cef28b.chunk.js","mappings":"+SACAA,EAAAA,EAAAA,SAAAA,QAAA,+BACA,IAAMC,EAAU,mCAIHC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,0FACRJ,EAAAA,EAAAA,GAAM,uBAAD,OACHG,EADG,oBACcF,IAFX,uBACvBI,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,wDASjBC,EAAmB,mCAAG,uGACVN,EAAAA,EAAAA,GAAM,+BAAD,OAAgCC,IAD3B,uBACzBI,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAOnBE,EAAoB,mCAAG,WAAMC,GAAN,0FACXR,EAAAA,EAAAA,GAAM,UAAD,OAAWQ,EAAX,oBAAyBP,IADnB,uBAC1BI,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,sDAOpBI,EAAoB,mCAAG,WAAMD,GAAN,0FACXR,EAAAA,EAAAA,GAAM,UAAD,OAAWQ,EAAX,4BAAiCP,IAD3B,uBAC1BI,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,sDAOpBK,EAAuB,mCAAG,WAAMF,GAAN,0FACdR,EAAAA,EAAAA,GAAM,UAAD,OAAWQ,EAAX,4BAAiCP,IADxB,uBAC7BI,EAD6B,EAC7BA,KAD6B,kBAE9BA,GAF8B,2CAAH,qD,4EClCrB,SAASM,IACtB,OACE,SAAC,KAAD,CACEC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGd,C,wJCXc,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,MAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQrB,GAAOsB,EAAAA,EAAAA,MAAPtB,GAkBR,IAhBAuB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,oGAEvBP,GAAa,GAFU,UAGJf,EAAAA,EAAAA,IAAwBF,GAHpB,OAGjBH,EAHiB,OAIvBwB,EAAaxB,GAJU,gDAMvBsB,EAAS,KAAMM,SAAS5B,KAAK6B,gBANN,yBAQvBT,GAAa,GARU,4EAAH,qDAYxBO,GACD,GAAE,CAACxB,IAECoB,EAAL,CAEA,IAAQO,EAAYP,EAAZO,QAER,OACE,2BACGX,IAAa,SAAC,IAAD,IACbE,IAAS,wBAAKA,IAEdS,EAAQC,OAAS,GAChB,wBAAI,sBAEJ,wBACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOC,OADC,QAbL,CAuBvB,C","sources":["API/API/api.js","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst API_KEY = '6d0bdb48df496425228df907b70af28f';\n\n// Запит для отримання колекції за пошуком\n\nexport const getMoviesBySearch = async (query, page) => {\n  const { data } = await axios(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\n// Запит для отримання колекції популярних\n\nexport const getMoviesByTrending = async () => {\n  const { data } = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\n// Запит для отримання детальної інформації про фільм\n\nexport const getDetailsMoviesById = async id => {\n  const { data } = await axios(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\n// Запит для отримання детальної інформації про акторів\n\nexport const getDetailsMoviesCast = async id => {\n  const { data } = await axios(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\n// Запит для отримання детальної інформації про огляди\n\nexport const getDetailsMoviesReviews = async id => {\n  const { data } = await axios(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n","import { Circles } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <Circles\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n}\n","import { getDetailsMoviesReviews } from 'API/API/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Loader from '../../components/Loader/Loader';\n\nexport default function MovieDetails() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [moviesObj, setMoviesObj] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMoviesDetails = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getDetailsMoviesReviews(id);\n        setMoviesObj(data);\n      } catch (error) {\n        setError(error.response.data.status_message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesDetails();\n  }, [id]);\n\n  if (!moviesObj) return;\n\n  const { results } = moviesObj;\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <h2>{error}</h2>}\n\n      {results.length < 1 ? (\n        <h3>No reviews found</h3>\n      ) : (\n        <ul>\n          {results.map(result => (\n            <li key={result.author}>\n              <h3>{result.author}</h3>\n              <p>{result.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","getMoviesBySearch","query","page","data","getMoviesByTrending","getDetailsMoviesById","id","getDetailsMoviesCast","getDetailsMoviesReviews","Loader","display","justifyContent","alignItems","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MovieDetails","useState","isLoading","setIsLoading","error","setError","moviesObj","setMoviesObj","useParams","useEffect","fetchMoviesDetails","response","status_message","results","length","map","result","author","content"],"sourceRoot":""}